% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_h5.R
\name{read_h5}
\alias{read_h5}
\title{Reads object in HDF5 files}
\usage{
read_h5(file, name = "matrix", ...)
}
\arguments{
\item{file}{The filename (character) of the file in which the dataset is be
located. It is possible to provide an object of class
\link[rhdf5:H5IdComponent-class]{H5IdComponent} representing a H5 location
identifier (file or group). See \link[rhdf5:H5Fcreate]{H5Fcreate},
\link[rhdf5:H5Fopen]{H5Fopen}, \link[rhdf5:H5Gcreate]{H5Gcreate},
\link[rhdf5:H5Gopen]{H5Gopen} to create an object of this kind.}

\item{name}{The name of the dataset in the HDF5 file.}

\item{...}{
  Arguments passed on to \code{\link[rhdf5:h5_read]{rhdf5::h5read}}
  \describe{
    \item{\code{index}}{List of indices for subsetting. The length of the list has to
agree with the dimensional extension of the HDF5 array. Each list element is
an integer vector of indices. A list element equal to NULL choses all
indices in this dimension. Counting is R-style 1-based.}
    \item{\code{start}}{The start coordinate of a hyperslab (similar to subsetting in
R). Counting is R-style 1-based. This argument is ignored, if index is not
NULL.}
    \item{\code{stride}}{The stride of the hypercube. Read the introduction
\url{http://ftp.hdfgroup.org/HDF5/Tutor/phypecont.html} before using this
argument. R behaves like Fortran in this example. This argument is ignored,
if index is not NULL.}
    \item{\code{block}}{The block size of the hyperslab. Read the introduction
\url{http://ftp.hdfgroup.org/HDF5/Tutor/phypecont.html} before using this
argument. R behaves like Fortran in this example. This argument is ignored,
if index is not NULL.}
    \item{\code{count}}{The number of blocks to be read. This argument is ignored,
if index is not NULL.}
    \item{\code{compoundAsDataFrame}}{If true, a compound datatype will be coerced to a
data.frame. This is not possible, if the dataset is multi-dimensional.
Otherwise the compound datatype will be returned as a list. Nested compound
data types will be returned as a nested list.}
    \item{\code{callGeneric}}{If TRUE a generic function h5read.classname will be
called if it exists depending on the dataset's class attribute within the
HDF5 file. This function can be used to convert the standard output of
h5read depending on the class attribute. Note that h5read is not a S3
generic function. Dispatching is done based on the HDF5 attribute after the
standard h5read function.}
    \item{\code{read.attributes}}{(logical) If \code{TRUE}, the HDF5 attributes are read and
attached to the respective R object.}
    \item{\code{drop}}{(logical) If TRUE, the HDF5 object is read as a vector with \code{NULL}
dim attributes.}
    \item{\code{native}}{An object of class \code{logical}. If TRUE, array-like objects
are treated as stored in HDF5 row-major rather than R column-major
orientation. Using \code{native = TRUE} increases HDF5 file portability
between programming languages. A file written with \code{native = TRUE}
should also be read with \code{native = TRUE}}
    \item{\code{s3}}{Logical value indicating whether the file argument should be
treated as a URL to an Amazon S3 bucket, rather than a local file path.}
    \item{\code{s3credentials}}{A list of length three, providing the credentials for
accessing files in a private Amazon S3 bucket.}
  }}
}
\value{
A \link{SingleCellExperiment} object.
}
\description{
Reads object in HDF5 files
}
